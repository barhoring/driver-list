{"version":3,"sources":["Header.js","DriverCard.js","DriverList.js","actionTypes.js","endpoint.js","index.js"],"names":["Header","setDrivers","className","type","placeholder","aria-label","onChange","event","target","value","console","log","DriverCard","name","driverType","driverRank","phone","email","profile_image","style","padding","backgroundColor","borderRadius","margin","height","backgroundImage","toLowerCase","paddingTop","DriverList","drivers","map","d","actionTypes","LOADING","RESPONSE_COMPLETE","SEARCH","ERROR","initialState","result","loading","error","fetchReducer","state","action","payload","response","App","useReducer","dispatch","useEffect","fetch","endpoint","then","res","json","catch","prefixName","newDrivers","filter","driver","includes","useFetch","driverList","message","render","document","getElementById"],"mappings":"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","file":"static/js/main.118d8515.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = ({ setDrivers }) => {\n  return (\n    <div className=\"container-fluid search\">\n      <div className=\"row\">\n        <h2 className=\"col-sm-8 mb-3 mt-3\">Contact List</h2>\n        <div className=\"col-sm-4 mb-3 mt-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Driver Name\"\n            aria-label=\"Driver Name\"\n            onChange={(event) => {\n              setDrivers(event.target.value);\n              console.log(event.target.value);\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./driverStyle.css\";\n\nconst DriverCard = ({\n  name,\n  driverType,\n  driverRank,\n  phone,\n  email,\n  profile_image,\n}) => {\n  profile_image =\n    profile_image ||\n    \"https://upload.wikimedia.org/wikipedia/en/6/60/No_Picture.jpg\";\n  return (\n    <div\n      style={{\n        padding: \"10px\",\n        backgroundColor: \"white\",\n        borderRadius: \"0.25rem\",\n        margin: \"10px\",\n        height: \"100%\",\n      }}\n    >\n      <div\n        className=\"card\"\n        style={{\n          backgroundImage: `url(${profile_image})`,\n        }}\n      >\n        <div className=\"footer\">\n          <div className=\"info\">\n            <div className=\"driver-type\">\n              <div\n                className={\n                  \"icon \" +\n                  (driverType.toLowerCase() === \"professional\"\n                    ? \"professional\"\n                    : \"citizen\")\n                }\n              ></div>\n            </div>\n            <div style={{ paddingTop: \"20px\" }}>\n              <div>{name}</div>\n              <div>Driver rank: {driverRank}</div>\n              <div>Phone: {phone}</div>\n              <div>Email: {email}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DriverCard;\n","import React from \"react\";\n// import Driver from \"./Driver\";\nimport DriverCard from \"./DriverCard\";\n\nconst DriverList = ({ drivers }) => {\n  return (\n    <div className=\"flex-container\">\n      {drivers.map((d) => (\n        <>\n          {/* <Driver {...d} /> */}\n          <DriverCard {...d} />\n        </>\n      ))}\n    </div>\n  );\n};\n\nexport default DriverList;\n","const LOADING = \"LOADING\";\nconst RESPONSE_COMPLETE = \"RESPONSE_COMPLETE\";\nconst SEARCH = \"SEARCH\";\nconst ERROR = \"ERROR\";\n\nconst actionTypes = { LOADING, RESPONSE_COMPLETE, SEARCH, ERROR };\n\nexport default actionTypes;\n","export default \"https://private-05627-frontendnewhire.apiary-mock.com/contact_list\";\n","import React, { useReducer, useEffect } from \"react\";\nimport { render } from \"react-dom\";\n\nimport Header from \"./Header\";\nimport DriverList from \"./DriverList\";\nimport actionTypes from \"./actionTypes\";\nimport endpoint from \"./endpoint\";\nimport \"./style.css\";\n\nconst initialState = {\n  drivers: null,\n  result: null,\n  loading: true,\n  error: null,\n};\n\nconst fetchReducer = (state, action) => {\n  console.log(action);\n  switch (action.type) {\n    case actionTypes.LOADING:\n      return initialState;\n    case actionTypes.RESPONSE_COMPLETE:\n      return {\n        loading: false,\n        error: null,\n        result: action.payload.response,\n        drivers: action.payload.response,\n      };\n    case actionTypes.SEARCH:\n      return {\n        loading: false,\n        error: null,\n        result: state.result,\n        drivers: action.payload.drivers,\n      };\n    default:\n      console.log(\"Action type not known\");\n      return state;\n  }\n};\n\nconst useFetch = () => {\n  const [state, dispatch] = useReducer(fetchReducer, initialState);\n\n  // Dependencies is [] to fetch drivers list only once\n  useEffect(() => {\n    dispatch({ type: actionTypes.LOADING });\n    console.log(\"Fetching drivers...\");\n    fetch(endpoint)\n      .then((res) => res.json())\n      .then((response) => {\n        dispatch({\n          type: actionTypes.RESPONSE_COMPLETE,\n          payload: { response },\n        });\n      })\n      .catch((error) => dispatch({ type: actionTypes.ERROR }));\n  }, []);\n\n  const search = (prefixName) => {\n    prefixName = prefixName.toLowerCase();\n    const newDrivers = state.result.filter((driver) => {\n      return driver.name.toLowerCase().includes(prefixName);\n    });\n    dispatch({ type: actionTypes.SEARCH, payload: { drivers: newDrivers } });\n  };\n\n  return [state.loading, state.error, state.result, state.drivers, search];\n};\n\nconst App = () => {\n  // eslint-disable-next-line\n  const [loading, error, response, drivers, setDrivers] = useFetch(endpoint);\n  let driverList = drivers || [];\n\n  console.log(\"drivers:\", drivers);\n\n  return (\n    <div>\n      <Header setDrivers={setDrivers} />\n      <main>\n        {loading ? <p>Loading...</p> : <DriverList drivers={driverList} />}{\" \"}\n      </main>\n      {error && <p className=\"error\">{error.message}</p>}\n    </div>\n  );\n};\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}